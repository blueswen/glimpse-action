name: Glimpse Action Test

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write  # Required for pushing to branches

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Set cache key week
        run: echo "CACHE_WEEK=$(date +%V)" >> $GITHUB_ENV

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers-week-${{ env.CACHE_WEEK }}
          restore-keys: |
            ${{ runner.os }}-playwright-browsers-week-

      - name: Install dependencies
        run: |
          npm init -y
          npm install @playwright/test
          npx playwright install chromium

      - name: Create Playwright test script
        run: |
          mkdir -p screenshots
          cat > test.js << 'EOL'
          const { chromium } = require('@playwright/test');
          
          (async () => {
            const browser = await chromium.launch();
            const page = await browser.newPage();
            
            // Capture GitHub profile
            await page.goto('https://github.com/blueswen');
            await page.waitForTimeout(1000);
            await page.screenshot({ path: 'screenshots/github.png', fullPage: true });

            // Capture personal website
            await page.goto('https://blueswen.github.io/');
            await page.waitForTimeout(1000);
            await page.screenshot({ path: 'screenshots/website.png', fullPage: true });

            await browser.close();
          })();
          EOL

      - name: Run Playwright script
        run: node test.js

      - name: Upload screenshots using local Glimpse action
        uses: ./
        id: upload
        with:
          directory: 'screenshots'
          branch: 'glimpse'
          generations: '5'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Display file URLs
        run: |
          echo "File URLs: ${{ steps.upload.outputs.file_urls }}"

      - name: Preview image in summary
        run: |
          echo "# Image Preview" >> $GITHUB_STEP_SUMMARY
          for file_url in $(echo "${{ steps.upload.outputs.file_urls }}" | tr ',' '\n'); do
            filename=$(basename "$file_url")
            echo "## ${filename}" >> $GITHUB_STEP_SUMMARY
            echo "![${filename}](${file_url})" >> $GITHUB_STEP_SUMMARY
          done
